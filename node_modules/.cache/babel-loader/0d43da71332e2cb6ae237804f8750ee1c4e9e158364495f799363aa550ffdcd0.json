{"ast":null,"code":"import DollarFormatInput from \"@/components/misc/DollarFormatInput.vue\";\nimport ItemInputWithMysteryMeat from \"@/components/misc/ItemInputWithMysteryMeat.vue\";\nimport { mapGetters, mapState, mapMutations } from \"vuex\";\nexport default {\n  components: {\n    DollarFormatInput,\n    ItemInputWithMysteryMeat\n  },\n  computed: {\n    // ...mapState(\"fasttrack\", [\"investments\"]),\n    ...mapGetters(\"fasttrack\", [\"beginningCashFlowDayIncome\"]),\n    ...mapState(\"fasttrack\", [\"investments\"])\n  },\n  methods: {\n    ...mapMutations(\"fasttrack\", [\"setInvestmentName\", \"setInvestmentCashflow\", \"addInvestment\", \"removeInvestment\"]),\n    changeInvestmentName(index, name) {\n      this.setInvestmentName({\n        index,\n        name\n      });\n    },\n    changeInvestmentCashFlow(index, cashflow) {\n      this.setInvestmentCashflow({\n        index,\n        cashflow\n      });\n    },\n    getAggregateCashflow(index) {\n      if (!this.investments[index].cashflow) {\n        return 0;\n      }\n      return this.investments.reduce((agg, curr, idx) => {\n        if (idx <= index) {\n          return agg + curr.cashflow;\n        } else {\n          return agg;\n        }\n      }, 0);\n    }\n  }\n  //   data: () => ({ investments: [] })\n};","map":{"version":3,"names":["DollarFormatInput","ItemInputWithMysteryMeat","mapGetters","mapState","mapMutations","components","computed","methods","changeInvestmentName","index","name","setInvestmentName","changeInvestmentCashFlow","cashflow","setInvestmentCashflow","getAggregateCashflow","investments","reduce","agg","curr","idx"],"sources":["src/components/fasttrack/incomerecord/IncomeRecordArea.vue"],"sourcesContent":["<template>\r\n  <section class=\"title-box\">\r\n    <h3>Your CASHFLOW Day Income Record</h3>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <td colspan=\"2\">Beginning CASHFLOW Day Income:</td>\r\n          <td><dollar-format-input :value=\"beginningCashFlowDayIncome\" readonly /></td>\r\n        </tr>\r\n        <tr>\r\n          <th>Business</th>\r\n          <th>Monthly Cash Flow</th>\r\n          <th>New CASHFLOW Day Income</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(investment, index) in investments\" :key=\"index\">\r\n          <td>\r\n            <item-input-with-mystery-meat>\r\n              <template #input>\r\n                <input type=\"text\" autocomplete=\"off\" :value=\"investment.name\" @input=\"changeInvestmentName(index, $event.target.value)\" />\r\n              </template>\r\n              <template #right-1>\r\n                <a v-if=\"index + 1 === investments.length\" class=\"right-1\" title=\"Add a row\" @click=\"addInvestment\"\r\n                  ><img src=\"@/images/add.svg\"\r\n                /></a>\r\n                <a\r\n                  v-else-if=\"investments.length > 12 && !investment.name && !investment.cashflow\"\r\n                  class=\"right-1\"\r\n                  title=\"Remove row\"\r\n                  @click=\"removeInvestment(index)\"\r\n                  ><img src=\"@/images/remove.svg\"\r\n                /></a>\r\n              </template>\r\n            </item-input-with-mystery-meat>\r\n          </td>\r\n          <td><dollar-format-input :value=\"investment.cashflow\" @input=\"changeInvestmentCashFlow(index, $event)\" /></td>\r\n          <td>\r\n            <dollar-format-input :value=\"investment.cashflow ? beginningCashFlowDayIncome + getAggregateCashflow(index) : 0\" readonly />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport DollarFormatInput from \"@/components/misc/DollarFormatInput.vue\";\r\nimport ItemInputWithMysteryMeat from \"@/components/misc/ItemInputWithMysteryMeat.vue\";\r\nimport { mapGetters, mapState, mapMutations } from \"vuex\";\r\n\r\nexport default {\r\n  components: { DollarFormatInput, ItemInputWithMysteryMeat },\r\n  computed: {\r\n    // ...mapState(\"fasttrack\", [\"investments\"]),\r\n    ...mapGetters(\"fasttrack\", [\"beginningCashFlowDayIncome\"]),\r\n    ...mapState(\"fasttrack\", [\"investments\"])\r\n  },\r\n  methods: {\r\n    ...mapMutations(\"fasttrack\", [\"setInvestmentName\", \"setInvestmentCashflow\", \"addInvestment\", \"removeInvestment\"]),\r\n    changeInvestmentName(index, name) {\r\n      this.setInvestmentName({ index, name });\r\n    },\r\n    changeInvestmentCashFlow(index, cashflow) {\r\n      this.setInvestmentCashflow({ index, cashflow });\r\n    },\r\n    getAggregateCashflow(index) {\r\n      if (!this.investments[index].cashflow) {\r\n        return 0;\r\n      }\r\n      return this.investments.reduce((agg, curr, idx) => {\r\n        if (idx <= index) {\r\n          return agg + curr.cashflow;\r\n        } else {\r\n          return agg;\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n  //   data: () => ({ investments: [] })\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\nsection {\r\n  margin-top: 20px;\r\n}\r\n\r\ntd {\r\n  padding: 5px;\r\n}\r\ntr > td:first-child {\r\n  padding-left: 0;\r\n}\r\ntr > td:last-child {\r\n  padding-right: 0;\r\n}\r\n</style>"],"mappings":"AA+CA,OAAAA,iBAAA;AACA,OAAAC,wBAAA;AACA,SAAAC,UAAA,EAAAC,QAAA,EAAAC,YAAA;AAEA;EACAC,UAAA;IAAAL,iBAAA;IAAAC;EAAA;EACAK,QAAA;IACA;IACA,GAAAJ,UAAA;IACA,GAAAC,QAAA;EACA;EACAI,OAAA;IACA,GAAAH,YAAA;IACAI,qBAAAC,KAAA,EAAAC,IAAA;MACA,KAAAC,iBAAA;QAAAF,KAAA;QAAAC;MAAA;IACA;IACAE,yBAAAH,KAAA,EAAAI,QAAA;MACA,KAAAC,qBAAA;QAAAL,KAAA;QAAAI;MAAA;IACA;IACAE,qBAAAN,KAAA;MACA,UAAAO,WAAA,CAAAP,KAAA,EAAAI,QAAA;QACA;MACA;MACA,YAAAG,WAAA,CAAAC,MAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,GAAA;QACA,IAAAA,GAAA,IAAAX,KAAA;UACA,OAAAS,GAAA,GAAAC,IAAA,CAAAN,QAAA;QACA;UACA,OAAAK,GAAA;QACA;MACA;IACA;EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}