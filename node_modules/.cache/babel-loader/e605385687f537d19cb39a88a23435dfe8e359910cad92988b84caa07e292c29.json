{"ast":null,"code":"/**\r\n * Reset State Vuex Plugin\r\n * Listens in for a \"RESET_STATE\" mutation and changes the state to what it was when the app started\r\n * Doesn't work with dynamically added vuex modules, because the initial state didn't have them loaded initially, duh.\r\n *\r\n * Please load this plugin first so that it captures the initial state accurately\r\n */\nconst resetStateVuexPlugin = store => {\n  const emptyState = JSON.stringify(store.state);\n\n  // Subscribe to the Vuex plugin point\n  store.subscribe((mutation, state) => {\n    if (mutation.type === \"RESET_STATE\") {\n      store.replaceState(JSON.parse(emptyState));\n    }\n  });\n};\nexport default resetStateVuexPlugin;","map":{"version":3,"names":["resetStateVuexPlugin","store","emptyState","JSON","stringify","state","subscribe","mutation","type","replaceState","parse"],"sources":["E:/dev/cashflow-balance-sheet/src/stores/plugins/resetstate.js"],"sourcesContent":["/**\r\n * Reset State Vuex Plugin\r\n * Listens in for a \"RESET_STATE\" mutation and changes the state to what it was when the app started\r\n * Doesn't work with dynamically added vuex modules, because the initial state didn't have them loaded initially, duh.\r\n *\r\n * Please load this plugin first so that it captures the initial state accurately\r\n */\r\nconst resetStateVuexPlugin = store => {\r\n  const emptyState = JSON.stringify(store.state);\r\n\r\n  // Subscribe to the Vuex plugin point\r\n  store.subscribe((mutation, state) => {\r\n    if (mutation.type === \"RESET_STATE\") {\r\n      store.replaceState(JSON.parse(emptyState));\r\n    }\r\n  });\r\n};\r\n\r\nexport default resetStateVuexPlugin;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAGC,KAAK,IAAI;EACpC,MAAMC,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAACI,KAAK,CAAC;;EAE9C;EACAJ,KAAK,CAACK,SAAS,CAAC,CAACC,QAAQ,EAAEF,KAAK,KAAK;IACnC,IAAIE,QAAQ,CAACC,IAAI,KAAK,aAAa,EAAE;MACnCP,KAAK,CAACQ,YAAY,CAACN,IAAI,CAACO,KAAK,CAACR,UAAU,CAAC,CAAC;IAC5C;EACF,CAAC,CAAC;AACJ,CAAC;AAED,eAAeF,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}