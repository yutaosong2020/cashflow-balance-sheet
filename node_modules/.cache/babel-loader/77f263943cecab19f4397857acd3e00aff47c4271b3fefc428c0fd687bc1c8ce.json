{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nvar localStorageVuexPluginThrottleTimeout;\n\n/**\r\n * Local Storage Vuex Plugin\r\n * Saves the state to local storage every time it is saved, and reloads it on startup\r\n */\nvar localStorageVuexPlugin = function localStorageVuexPlugin(store) {\n  var gameKey = \"cashflow-current-game\";\n\n  // Initialize state from the last game, if it's there\n  var savedGameJson = localStorage.getItem(gameKey);\n  if (savedGameJson) {\n    var savedGame = JSON.parse(savedGameJson);\n    store.replaceState(savedGame);\n    // console.log(\"Loaded saved game\", savedGame);\n  }\n\n  // Save the state\n  var commitToLocalStorage = function commitToLocalStorage(data) {\n    // console.log(\"Saving state to localStorage\");\n    localStorage.setItem(gameKey, JSON.stringify(data));\n  };\n\n  // Subscribe to the Vuex plugin point\n  store.subscribe(function (mutation, state) {\n    // debounce quick successive calls to save state - they can fire when the UI is bored\n    if (localStorageVuexPluginThrottleTimeout) window.clearTimeout(localStorageVuexPluginThrottleTimeout);\n    localStorageVuexPluginThrottleTimeout = window.setTimeout(function () {\n      return commitToLocalStorage(state);\n    }, 456);\n  });\n};\nexport default localStorageVuexPlugin;","map":{"version":3,"names":["localStorageVuexPluginThrottleTimeout","localStorageVuexPlugin","store","gameKey","savedGameJson","localStorage","getItem","savedGame","JSON","parse","replaceState","commitToLocalStorage","data","setItem","stringify","subscribe","mutation","state","window","clearTimeout","setTimeout"],"sources":["E:/dev/cashflow-balance-sheet/src/stores/plugins/localstorage.js"],"sourcesContent":["var localStorageVuexPluginThrottleTimeout;\r\n\r\n/**\r\n * Local Storage Vuex Plugin\r\n * Saves the state to local storage every time it is saved, and reloads it on startup\r\n */\r\nconst localStorageVuexPlugin = store => {\r\n  const gameKey = \"cashflow-current-game\";\r\n\r\n  // Initialize state from the last game, if it's there\r\n  const savedGameJson = localStorage.getItem(gameKey);\r\n  if (savedGameJson) {\r\n    const savedGame = JSON.parse(savedGameJson);\r\n    store.replaceState(savedGame);\r\n    // console.log(\"Loaded saved game\", savedGame);\r\n  }\r\n\r\n  // Save the state\r\n  const commitToLocalStorage = data => {\r\n    // console.log(\"Saving state to localStorage\");\r\n    localStorage.setItem(gameKey, JSON.stringify(data));\r\n  };\r\n\r\n  // Subscribe to the Vuex plugin point\r\n  store.subscribe((mutation, state) => {\r\n    // debounce quick successive calls to save state - they can fire when the UI is bored\r\n    if (localStorageVuexPluginThrottleTimeout) window.clearTimeout(localStorageVuexPluginThrottleTimeout);\r\n    localStorageVuexPluginThrottleTimeout = window.setTimeout(() => commitToLocalStorage(state), 456);\r\n  });\r\n};\r\n\r\nexport default localStorageVuexPlugin;\r\n"],"mappings":";;AAAA,IAAIA,qCAAqC;;AAEzC;AACA;AACA;AACA;AACA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAGC,KAAK,EAAI;EACtC,IAAMC,OAAO,GAAG,uBAAuB;;EAEvC;EACA,IAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAACH,OAAO,CAAC;EACnD,IAAIC,aAAa,EAAE;IACjB,IAAMG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACL,aAAa,CAAC;IAC3CF,KAAK,CAACQ,YAAY,CAACH,SAAS,CAAC;IAC7B;EACF;;EAEA;EACA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAGC,IAAI,EAAI;IACnC;IACAP,YAAY,CAACQ,OAAO,CAACV,OAAO,EAAEK,IAAI,CAACM,SAAS,CAACF,IAAI,CAAC,CAAC;EACrD,CAAC;;EAED;EACAV,KAAK,CAACa,SAAS,CAAC,UAACC,QAAQ,EAAEC,KAAK,EAAK;IACnC;IACA,IAAIjB,qCAAqC,EAAEkB,MAAM,CAACC,YAAY,CAACnB,qCAAqC,CAAC;IACrGA,qCAAqC,GAAGkB,MAAM,CAACE,UAAU,CAAC;MAAA,OAAMT,oBAAoB,CAACM,KAAK,CAAC;IAAA,GAAE,GAAG,CAAC;EACnG,CAAC,CAAC;AACJ,CAAC;AAED,eAAehB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}