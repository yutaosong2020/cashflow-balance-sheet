{"ast":null,"code":"import { mapGetters, mapMutations } from \"vuex\";\nimport DollarFormatInput from \"@/components/misc/DollarFormatInput.vue\";\nimport ModalWindow from \"@/components/application/ModalWindow.vue\";\nexport default {\n  components: {\n    ModalWindow,\n    DollarFormatInput\n  },\n  props: {\n    index: {\n      type: Number,\n      default: -1\n    }\n  },\n  data() {\n    return {\n      sellCostPerShare: 0\n    };\n  },\n  computed: {\n    ...mapGetters(\"investments\", [\"getStock\"]),\n    item() {\n      return this.getStock(this.index);\n    },\n    totalCost() {\n      return this.item.shares * this.item.costPerShare;\n    },\n    sellValue() {\n      return this.sellCostPerShare * this.item.shares;\n    }\n  },\n  methods: {\n    ...mapMutations(\"investments\", [\"changeStockName\", \"changeStockShares\", \"changeStockCostPerShare\", \"deleteStock\", \"closeModal\"]),\n    changeName(value) {\n      this.changeStockName({\n        index: this.index,\n        value\n      });\n    },\n    changeShares(value) {\n      this.changeStockShares({\n        index: this.index,\n        value: value\n      });\n    },\n    changeCostPerShare(value) {\n      this.changeStockCostPerShare({\n        index: this.index,\n        value\n      });\n    }\n  },\n  filters: {\n    dollars(value) {\n      return `$${new Intl.NumberFormat(\"en-US\").format(value)}`;\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","DollarFormatInput","ModalWindow","components","props","index","type","Number","default","data","sellCostPerShare","computed","item","getStock","totalCost","shares","costPerShare","sellValue","methods","changeName","value","changeStockName","changeShares","changeStockShares","changeCostPerShare","changeStockCostPerShare","filters","dollars","Intl","NumberFormat","format"],"sources":["src/components/ratrace/modals/StockModal.vue"],"sourcesContent":["<template>\r\n  <modal-window @del=\"deleteStock(index)\" @close=\"closeModal\">\r\n    <template #header>Real Estate</template>\r\n    <template #body>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td><label>Stock / Fund / CD Name:</label></td>\r\n            <td><input type=\"text\" autocomplete=\"off\" :value=\"item.name\" @input=\"changeName($event.target.value)\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <td><label>Shares:</label></td>\r\n            <td>\r\n              <input type=\"text\" autocomplete=\"off\" class=\"numeric\" :value=\"item.shares\" @input=\"changeShares($event.target.value)\" />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td><label>Cost Per Share:</label></td>\r\n            <td><dollar-format-input name=\"costPerShare\" :value=\"item.costPerShare\" @input=\"changeCostPerShare\" /></td>\r\n          </tr>\r\n          <tr>\r\n            <td>Total Cost</td>\r\n            <td class=\"numeric\">\r\n              <h2>{{ totalCost | dollars }}</h2>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td><label>Sell Cost Per Share:</label></td>\r\n            <td><dollar-format-input v-model=\"sellCostPerShare\" /></td>\r\n          </tr>\r\n          <tr v-if=\"sellCostPerShare\">\r\n            <td>Your Take</td>\r\n            <td class=\"numeric\">\r\n              <h2>{{ sellValue | dollars }}, gain of {{ (sellValue - totalCost) | dollars }}</h2>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </template>\r\n  </modal-window>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\nimport DollarFormatInput from \"@/components/misc/DollarFormatInput.vue\";\r\nimport ModalWindow from \"@/components/application/ModalWindow.vue\";\r\n\r\nexport default {\r\n  components: { ModalWindow, DollarFormatInput },\r\n  props: {\r\n    index: { type: Number, default: -1 }\r\n  },\r\n  data() {\r\n    return {\r\n      sellCostPerShare: 0\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"investments\", [\"getStock\"]),\r\n    item() {\r\n      return this.getStock(this.index);\r\n    },\r\n    totalCost() {\r\n      return this.item.shares * this.item.costPerShare;\r\n    },\r\n    sellValue() {\r\n      return this.sellCostPerShare * this.item.shares;\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations(\"investments\", [\"changeStockName\", \"changeStockShares\", \"changeStockCostPerShare\", \"deleteStock\", \"closeModal\"]),\r\n    changeName(value) {\r\n      this.changeStockName({ index: this.index, value });\r\n    },\r\n    changeShares(value) {\r\n      this.changeStockShares({ index: this.index, value: value });\r\n    },\r\n    changeCostPerShare(value) {\r\n      this.changeStockCostPerShare({ index: this.index, value });\r\n    }\r\n  },\r\n  filters: {\r\n    dollars(value) {\r\n      return `$${new Intl.NumberFormat(\"en-US\").format(value)}`;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA2CA,SAAAA,UAAA,EAAAC,YAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,WAAA;AAEA;EACAC,UAAA;IAAAD,WAAA;IAAAD;EAAA;EACAG,KAAA;IACAC,KAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,OAAA;IAAA;EACA;EACAC,KAAA;IACA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAZ,UAAA;IACAa,KAAA;MACA,YAAAC,QAAA,MAAAR,KAAA;IACA;IACAS,UAAA;MACA,YAAAF,IAAA,CAAAG,MAAA,QAAAH,IAAA,CAAAI,YAAA;IACA;IACAC,UAAA;MACA,YAAAP,gBAAA,QAAAE,IAAA,CAAAG,MAAA;IACA;EACA;EACAG,OAAA;IACA,GAAAlB,YAAA;IACAmB,WAAAC,KAAA;MACA,KAAAC,eAAA;QAAAhB,KAAA,OAAAA,KAAA;QAAAe;MAAA;IACA;IACAE,aAAAF,KAAA;MACA,KAAAG,iBAAA;QAAAlB,KAAA,OAAAA,KAAA;QAAAe,KAAA,EAAAA;MAAA;IACA;IACAI,mBAAAJ,KAAA;MACA,KAAAK,uBAAA;QAAApB,KAAA,OAAAA,KAAA;QAAAe;MAAA;IACA;EACA;EACAM,OAAA;IACAC,QAAAP,KAAA;MACA,eAAAQ,IAAA,CAAAC,YAAA,UAAAC,MAAA,CAAAV,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}