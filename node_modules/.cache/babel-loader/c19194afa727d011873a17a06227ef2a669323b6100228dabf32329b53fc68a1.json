{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst newStock = () => ({\n  name: \"\",\n  shares: 0,\n  costPerShare: 0\n});\nconst newRealEstate = () => ({\n  name: \"\",\n  downPayment: 0,\n  cost: 0,\n  mortgage: 0,\n  income: 0\n});\nconst newBusiness = () => ({\n  name: \"\",\n  downPayment: 0,\n  cost: 0,\n  liability: 0,\n  income: 0\n});\nconst initialState = () => ({\n  realEstate: [newRealEstate(), newRealEstate(), newRealEstate(), newRealEstate()],\n  businesses: [newBusiness(), newBusiness()],\n  stocks: [newStock(), newStock()],\n  modal: {\n    show: false,\n    type: null,\n    // one of: realEstate, business, stock\n    index: -1 // index of the item being edited\n  }\n});\n\nexport default {\n  namespaced: true,\n  state: initialState(),\n  getters: {\n    getStock: state => index => state.stocks[index],\n    getRealEstate: state => index => state.realEstate[index],\n    getBusiness: state => index => state.businesses[index]\n  },\n  mutations: {\n    // Stocks / Mutual Funds / CDs\n    changeStockName: (state, {\n      index,\n      value\n    }) => state.stocks[index].name = value,\n    changeStockShares: (state, {\n      index,\n      value\n    }) => state.stocks[index].shares = value,\n    changeStockCostPerShare: (state, {\n      index,\n      value\n    }) => state.stocks[index].costPerShare = value,\n    addStock: state => state.stocks.push(newStock()),\n    deleteStock: (state, index) => {\n      state.stocks = state.stocks.filter((_val, i) => i !== index);\n      if (state.stocks.length < 2) {\n        state.stocks.push(newStock());\n      }\n      state.modal.show = false;\n    },\n    showStockModal(state, index) {\n      state.modal = {\n        show: true,\n        type: \"stock\",\n        index: index\n      };\n    },\n    // Real Estate\n    changeRealEstateName: (state, {\n      index,\n      value\n    }) => state.realEstate[index].name = value,\n    changeRealEstateDownPayment: (state, {\n      index,\n      value\n    }) => state.realEstate[index].downPayment = value,\n    changeRealEstateCost: (state, {\n      index,\n      value\n    }) => state.realEstate[index].cost = value,\n    changeRealEstateMortgage: (state, {\n      index,\n      value\n    }) => state.realEstate[index].mortgage = value,\n    changeRealEstateIncome: (state, {\n      index,\n      value\n    }) => state.realEstate[index].income = value,\n    addRealEstate: state => state.realEstate.push(newRealEstate()),\n    deleteRealEstate: (state, index) => {\n      state.realEstate = state.realEstate.filter((_val, i) => i !== index);\n      if (state.realEstate.length < 4) {\n        state.realEstate.push(newRealEstate());\n      }\n      state.modal.show = false;\n    },\n    showRealEstateModal(state, index) {\n      state.modal = {\n        show: true,\n        type: \"realEstate\",\n        index: index\n      };\n    },\n    // Businesses\n    changeBusinessName: (state, {\n      index,\n      value\n    }) => state.businesses[index].name = value,\n    changeBusinessDownPayment: (state, {\n      index,\n      value\n    }) => state.businesses[index].downPayment = value,\n    changeBusinessCost: (state, {\n      index,\n      value\n    }) => state.businesses[index].cost = value,\n    changeBusinessLiability: (state, {\n      index,\n      value\n    }) => state.businesses[index].liability = value,\n    changeBusinessIncome: (state, {\n      index,\n      value\n    }) => state.businesses[index].income = value,\n    addBusiness: state => state.businesses.push(newBusiness()),\n    deleteBusiness: (state, index) => {\n      state.businesses = state.businesses.filter((_val, i) => i !== index);\n      if (state.businesses.length < 2) {\n        state.businesses.push(newBusiness());\n      }\n      state.modal.show = false;\n    },\n    showBusinessModal(state, index) {\n      state.modal = {\n        show: true,\n        type: \"business\",\n        index: index\n      };\n    },\n    closeModal(state) {\n      state.modal.show = false;\n    }\n  }\n};","map":{"version":3,"names":["newStock","name","shares","costPerShare","newRealEstate","downPayment","cost","mortgage","income","newBusiness","liability","initialState","realEstate","businesses","stocks","modal","show","type","index","namespaced","state","getters","getStock","getRealEstate","getBusiness","mutations","changeStockName","value","changeStockShares","changeStockCostPerShare","addStock","push","deleteStock","filter","_val","i","length","showStockModal","changeRealEstateName","changeRealEstateDownPayment","changeRealEstateCost","changeRealEstateMortgage","changeRealEstateIncome","addRealEstate","deleteRealEstate","showRealEstateModal","changeBusinessName","changeBusinessDownPayment","changeBusinessCost","changeBusinessLiability","changeBusinessIncome","addBusiness","deleteBusiness","showBusinessModal","closeModal"],"sources":["E:/dev/cashflow-balance-sheet/src/stores/investments.js"],"sourcesContent":["const newStock = () => ({ name: \"\", shares: 0, costPerShare: 0 });\r\nconst newRealEstate = () => ({ name: \"\", downPayment: 0, cost: 0, mortgage: 0, income: 0 });\r\nconst newBusiness = () => ({ name: \"\", downPayment: 0, cost: 0, liability: 0, income: 0 });\r\n\r\nconst initialState = () => ({\r\n  realEstate: [newRealEstate(), newRealEstate(), newRealEstate(), newRealEstate()],\r\n  businesses: [newBusiness(), newBusiness()],\r\n  stocks: [newStock(), newStock()],\r\n  modal: {\r\n    show: false,\r\n    type: null, // one of: realEstate, business, stock\r\n    index: -1 // index of the item being edited\r\n  }\r\n});\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: initialState(),\r\n  getters: {\r\n    getStock: state => index => state.stocks[index],\r\n    getRealEstate: state => index => state.realEstate[index],\r\n    getBusiness: state => index => state.businesses[index]\r\n  },\r\n  mutations: {\r\n    // Stocks / Mutual Funds / CDs\r\n    changeStockName: (state, { index, value }) => (state.stocks[index].name = value),\r\n    changeStockShares: (state, { index, value }) => (state.stocks[index].shares = value),\r\n    changeStockCostPerShare: (state, { index, value }) => (state.stocks[index].costPerShare = value),\r\n    addStock: state => state.stocks.push(newStock()),\r\n    deleteStock: (state, index) => {\r\n      state.stocks = state.stocks.filter((_val, i) => i !== index);\r\n      if (state.stocks.length < 2) {\r\n        state.stocks.push(newStock());\r\n      }\r\n      state.modal.show = false;\r\n    },\r\n    showStockModal(state, index) {\r\n      state.modal = {\r\n        show: true,\r\n        type: \"stock\",\r\n        index: index\r\n      };\r\n    },\r\n\r\n    // Real Estate\r\n    changeRealEstateName: (state, { index, value }) => (state.realEstate[index].name = value),\r\n    changeRealEstateDownPayment: (state, { index, value }) => (state.realEstate[index].downPayment = value),\r\n    changeRealEstateCost: (state, { index, value }) => (state.realEstate[index].cost = value),\r\n    changeRealEstateMortgage: (state, { index, value }) => (state.realEstate[index].mortgage = value),\r\n    changeRealEstateIncome: (state, { index, value }) => (state.realEstate[index].income = value),\r\n    addRealEstate: state => state.realEstate.push(newRealEstate()),\r\n    deleteRealEstate: (state, index) => {\r\n      state.realEstate = state.realEstate.filter((_val, i) => i !== index);\r\n      if (state.realEstate.length < 4) {\r\n        state.realEstate.push(newRealEstate());\r\n      }\r\n      state.modal.show = false;\r\n    },\r\n    showRealEstateModal(state, index) {\r\n      state.modal = {\r\n        show: true,\r\n        type: \"realEstate\",\r\n        index: index\r\n      };\r\n    },\r\n\r\n    // Businesses\r\n    changeBusinessName: (state, { index, value }) => (state.businesses[index].name = value),\r\n    changeBusinessDownPayment: (state, { index, value }) => (state.businesses[index].downPayment = value),\r\n    changeBusinessCost: (state, { index, value }) => (state.businesses[index].cost = value),\r\n    changeBusinessLiability: (state, { index, value }) => (state.businesses[index].liability = value),\r\n    changeBusinessIncome: (state, { index, value }) => (state.businesses[index].income = value),\r\n    addBusiness: state => state.businesses.push(newBusiness()),\r\n    deleteBusiness: (state, index) => {\r\n      state.businesses = state.businesses.filter((_val, i) => i !== index);\r\n      if (state.businesses.length < 2) {\r\n        state.businesses.push(newBusiness());\r\n      }\r\n      state.modal.show = false;\r\n    },\r\n    showBusinessModal(state, index) {\r\n      state.modal = {\r\n        show: true,\r\n        type: \"business\",\r\n        index: index\r\n      };\r\n    },\r\n\r\n    closeModal(state) {\r\n      state.modal.show = false;\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}